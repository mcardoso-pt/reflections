When would you want to use a remote repository rather than keeping all your work
local?

    When I want to use multiple computers or collaborate with others.

Why might you want to always pull changes manually rather than having Git
automatically stay up-to-date with your remote repository?

    Manual push/pull gives me control over what is and isn't made public to others

Describe the differences between forks, clones, and branches.  When would you
use one instead of another?

    forks: when I want to update a clone of another person's repository without altering the original
    clones: when I want to just make a copy of a repository
    branches: when I want to make experimental changes inside a repository

What is the benefit of having a copy of the last known state of the remote
stored locally?

    It allows me to continue working even without having access to the remote

How would you collaborate without using Git or GitHub?  What would be easier,
and what would be harder?

    Without git/github it would be about saving different versions of files and exchanging
    those versions with my collaborators through email or other means. This could be practical
    for very small, single file projects. Using git/github has a learning curve which is time
    consuming at first. There is also some "personal time overhead" associated with its use.
    However, as the number of collaborators and/or the size of the projects increases, the
    utility of version control software starts to be more and more evident. It helps to manage
    the complexity of large projects and teams.

When would you want to make changes in a separate branch rather than directly in
master?  What benefits does each approach have?

    Fill in your answer here

